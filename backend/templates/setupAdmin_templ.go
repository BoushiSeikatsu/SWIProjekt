// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.793
package templates

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

func SetupAdmin() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<!doctype html><html lang=\"en\"><head><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Setup Admin account</title><link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css\" rel=\"stylesheet\"><link href=\"https://cdnjs.cloudflare.com/ajax/libs/bootstrap-icons/1.8.1/font/bootstrap-icons.min.css\" rel=\"stylesheet\"><style>\r\n            body, html {\r\n                height: 100%;\r\n            }\r\n            .register-container {\r\n                height: 100%;\r\n                display: flex;\r\n                justify-content: center;\r\n                align-items: center;\r\n            }\r\n            .register-form {\r\n                width: 100%;\r\n                max-width: 400px;\r\n                padding: 15px;\r\n                border: 1px solid #ccc;\r\n                border-radius: 10px;\r\n                box-shadow: 0px 0px 10px rgba(0,0,0,0.1);\r\n            }\r\n            .error-text {\r\n                color: red;\r\n                font-size: 0.875em;\r\n                margin-top: 5px;\r\n            }\r\n        </style></head><body><div class=\"container register-container\"><div class=\"register-form\"><h2 class=\"text-center mb-4\">Setup Admin account</h2><form method=\"post\"><div class=\"mb-3\"><label for=\"username\" class=\"form-label\">Username</label> <input type=\"text\" class=\"form-control\" id=\"username\" name=\"username\" placeholder=\"Username\" required><div class=\"error-text\">Optional username error</div></div><div class=\"mb-3\"><label for=\"password\" class=\"form-label\">Password</label><div class=\"input-group\"><input type=\"password\" class=\"form-control\" id=\"password\" name=\"password\" placeholder=\"Password\" required> <button class=\"btn btn-outline-secondary\" type=\"button\" onclick=\"togglePassword(&#39;password&#39;, this)\"><i class=\"bi bi-eye\"></i></button></div><div class=\"error-text\">Optional password error</div></div><div class=\"mb-3\"><label for=\"passwordRepeat\" class=\"form-label\">Repeat Password</label><div class=\"input-group\"><input type=\"password\" class=\"form-control\" id=\"passwordRepeat\" name=\"passwordRepeat\" placeholder=\"Repeat Password\" required> <button class=\"btn btn-outline-secondary\" type=\"button\" onclick=\"togglePassword(&#39;passwordRepeat&#39;, this)\"><i class=\"bi bi-eye\"></i></button></div><div class=\"error-text\">Optional password repeat error</div></div><button type=\"submit\" class=\"btn btn-primary w-100\"><i class=\"bi bi-shield-lock me-2\"></i>Register</button></form></div></div><script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js\"></script><script>\r\n            function togglePassword(fieldId, button) {\r\n                const field = document.document.getElementById(fieldId);;\r\n                const icon = button.querySelector('i');\r\n                if (field.type === \"password\") {\r\n                    field.type = \"text\";\r\n                    icon.classList.replace('bi-eye', 'bi-eye-slash');\r\n                } else {\r\n                    field.type = \"password\";\r\n                    icon.classList.replace('bi-eye-slash', 'bi-eye');\r\n                }\r\n            }\r\n        </script></body></html>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return templ_7745c5c3_Err
	})
}

var _ = templruntime.GeneratedTemplate
