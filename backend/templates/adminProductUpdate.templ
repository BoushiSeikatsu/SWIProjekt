package templates

import (
    "strconv"
    "swi-warehouse/models"
)

templ AdminUpdateProduct(product models.Product, manufacturers []models.Manufacturer) {

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Update Product</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-icons/1.8.1/font/bootstrap-icons.min.css" rel="stylesheet">
    <style>
        body, html {
            height: 100%;
            margin: 0;
            overflow: hidden;
        }
        .navbar {
            position: fixed;
            top: 0;
            width: 100%;
            z-index: 1000;
            background-color: #be274b;
            padding: 10px 0;
        }
        .navbar .nav-link,
        .navbar .navbar-icon {
            color: #e2e6ea;
            padding: 10px 15px;
            font-weight: bold;
            text-align: center;
            display: flex;
            flex-direction: column;
            line-height: 1.2;
            position: relative;
        }
        .navbar-icon {
            font-size: 1.5rem;
            cursor: default;
        }
        .nav-link[onclick] {
            cursor: pointer;
            user-select: none;
        }
        .d-flex {
            align-items: center;
        }
        .navbar .nav-link:hover {
            background-color: #da3060;
            border-radius: 5px;
            transition: background-color 0.3s ease;
        }
        .content-container {
            display: flex;
            justify-content: center;
            align-items: center;
            min-height: 100vh;
            padding-top: 78px;
        }
        .justify-between {
            display: flex;
            align-items: center;
            justify-content: space-between;
            width: 100%;
        }
        .submenu {
            display: none;
            position: absolute;
            background-color: #f8f9fa;
            border-radius: 5px;
            padding: 10px;
            top: 100%;
            left: 50%;
            transform: translateX(-50%);
            margin-top: 5px;
            z-index: 1001;
        }
        .submenu a {
            color: #333;
            text-decoration: none;
            display: block;
            padding: 5px 15px;
        }
        .submenu a:hover {
            background-color: #ddd;
            border-radius: 5px;
        }
        .setup-container {
            height: calc(100% + 78px);
            display: flex;
            justify-content: center;
            align-items: center;
        }
        .setup-form {
            width: 100%;
            max-width: 800px;
            padding: 15px;
            border: 1px solid #ccc;
            border-radius: 10px;
            box-shadow: 0px 0px 10px rgba(0,0,0,0.1);
        }
        .back-arrow {
            font-size: 1.5rem;
            color: gray;
            text-decoration: none;
        }
        .error-text {
            color: red;
            font-size: 0.875em;
            margin-top: 5px;
        }
    </style>
</head>
<body>
    @AdminNav()

    <div class="container setup-container">
        <div class="setup-form">
            <div class="d-flex align-items-center mb-4">
                <a href="SearchProducts.html" class="back-arrow position-absolute"><i class="bi bi-arrow-left-circle"></i></a>
                <h2 class="text-center w-100">Update Product</h2>
            </div>
            <form method="post">
                <input type="hidden" id="actionType" name="actionType" value="update">
                <div class="row">
                    <div class="col-md-6">
                        <div class="mb-3">
                            <label for="description" class="form-label">Description</label>
                            <input type="text" class="form-control" id="description" name="description" placeholder="Description" value={product.Description} required>
                            <div class="error-text">Optional description error</div>
                        </div>
                        <div class="mb-3">
                            <label for="manufacturerSelect" class="form-label">Select Manufacturer</label>
                            <select class="form-select" id="manufacturerSelect" name="manufacturerSelect" required>
                            for _, manufacturer := range manufacturers {
                                <option value={strconv.FormatUint(uint64(manufacturer.ID), 10)}
                                if manufacturer.ID == product.Manufacturer.ID {
                                    selected
                                }
                            >{manufacturer.Name}</option>
                        }
                            </select>
                            <div class="error-text">Optional manufacturer error</div>
                        </div>
                        <div class="mb-3">
                            <label for="batch" class="form-label">Batch</label>
                            <input type="text" class="form-control" id="batch" name="batch" placeholder="Batch" value={product.Batch} required>
                            <div class="error-text">Optional batch error</div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="mb-3">
                            <div class="d-flex">
                                <div class="me-2">
                                    <label for="dimX" class="form-label">Width</label>
                                    <input type="number" class="form-control" id="dimX" name="dimX" placeholder="0" min="0" step="1" value={strconv.FormatUint(uint64(product.XDimension), 10)} required oninput="this.value = this.value.replace(/[^0-9]/g, '')">
                                </div>
                                <div class="me-2">
                                    <label for="dimY" class="form-label">Height</label>
                                    <input type="number" class="form-control" id="dimY" name="dimY" placeholder="0" min="0" step="1" value={strconv.FormatUint(uint64(product.YDimension), 10)} required oninput="this.value = this.value.replace(/[^0-9]/g, '')">
                                </div>
                                <div>
                                    <label for="dimZ" class="form-label">Depth</label>
                                    <input type="number" class="form-control" id="dimZ" name="dimZ" placeholder="0" min="0" step="1" value={strconv.FormatUint(uint64(product.ZDimension), 10)} required oninput="this.value = this.value.replace(/[^0-9]/g, '')">
                                </div>
                            </div>
                            <div class="error-text">Optional dimension error</div>
                        </div>
                        <div class="mb-3">
                            <label for="unit" class="form-label">Unit</label>
                            <input type="text" class="form-control" id="unit" name="unit" placeholder="Unit" value={product.Unit} required>
                            <div class="error-text">Optional unit error</div>
                        </div>
                        <div class="mb-3">
                            <label for="identification" class="form-label">Identification</label>
                            <input type="text" class="form-control" id="identification" name="id" placeholder="Identification" value={strconv.FormatUint(uint64(product.ID), 10)} required>
                            <div class="error-text">Optional identification error</div>
                        </div>
                    </div>
                </div>
                <!-- TODO??? -->
                <!-- If product is not stored yet -->
                <div class="d-flex justify-content-between mt-3">
                    <button type="submit" class="btn btn-primary w-100 me-2">
                        <i class="bi bi-shield-lock me-2"></i>Update
                    </button>
                    <button type="button" class="btn btn-danger w-100" onclick="handleDelete()">
                        <i class="bi bi-shield-lock me-2"></i>Delete
                    </button>
                </div>
                <!-- If product is already stored (no delete) -->
                <!-- <div class="d-flex justify-content-center">
                    <div style="max-width: 500px; width: 100%;">
                        <button type="submit" class="btn btn-primary w-100 mt-3">
                            <i class="bi bi-shield-lock me-2"></i>Update
                        </button>
                    </div>
                </div> -->
            </form>
        </div>
    </div>
</body>
</html>
}