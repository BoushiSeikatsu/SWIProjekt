// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.793
package templates

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

func Login() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<!doctype html><html lang=\"en\"><head><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Login</title><link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css\" rel=\"stylesheet\"><link href=\"https://cdnjs.cloudflare.com/ajax/libs/bootstrap-icons/1.8.1/font/bootstrap-icons.min.css\" rel=\"stylesheet\"><style>\n        body, html {\n            height: 100%;\n        }\n        .login-container {\n            height: 100%;\n            display: flex;\n            justify-content: center;\n            align-items: center;\n        }\n        .login-form {\n            width: 100%;\n            max-width: 400px;\n            padding: 15px;\n            border: 1px solid #ccc;\n            border-radius: 10px;\n            box-shadow: 0px 0px 10px rgba(0,0,0,0.1);\n        }\n        .error-text {\n            color: red;\n            font-size: 0.875em;\n            margin-top: 5px;\n        }\n    </style></head><body><div class=\"container login-container\"><div class=\"login-form\"><h2 class=\"text-center mb-4\">Login</h2><form method=\"post\"><div class=\"mb-3\"><label for=\"username\" class=\"form-label\">Username</label> <input type=\"text\" class=\"form-control\" id=\"username\" name=\"username\" placeholder=\"Username\" required><div class=\"error-text\">Optional username error</div></div><div class=\"mb-3\"><label for=\"password\" class=\"form-label\">Password</label><div class=\"input-group\"><input type=\"password\" class=\"form-control\" id=\"password\" name=\"password\" placeholder=\"Password\"> <button class=\"btn btn-outline-secondary\" type=\"button\" onclick=\"togglePassword(&#39;password&#39;, this)\"><i class=\"bi bi-eye\"></i></button></div><div class=\"error-text\">Optional password error</div></div><p class=\"text-muted\">If you have forgotten your password, contact the administrator.</p><button type=\"submit\" class=\"btn btn-primary w-100\">Login</button></form></div></div><script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js\"></script><script>\n        function togglePassword(fieldId, button) {\n            const field = document.document.getElementById(fieldId);;\n            const icon = button.querySelector('i');\n            if (field.type === \"password\") {\n                field.type = \"text\";\n                icon.classList.replace('bi-eye', 'bi-eye-slash');\n            } else {\n                field.type = \"password\";\n                icon.classList.replace('bi-eye-slash', 'bi-eye');\n            }\n        }\n    </script></body></html>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return templ_7745c5c3_Err
	})
}

var _ = templruntime.GeneratedTemplate
